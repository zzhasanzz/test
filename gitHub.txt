devops is a culture of being able to deliver solutions faster where your development teams and your operation teams work effectively together.. 	

Devops is a culture that allows Development and Operations team to work together

Developers continuously develop and test codes

There is continuous integration taking place throught the lifecycle

Operations team continuously deploy the codes to the production environment

Allows better collaboration, increased trust and faster stream of software releases

Tools in devops:



Features of Git:

Tracks History
Free and Open source
Supports Non_Linear Development
Creates Backup
Scalable
Supports Collaboration
Branching is easier
Distributed Development



version control is a sytem that allows multiple people to work on different parts of a project at the same time. A VCS record changes to files and helps you : 

-keep track 
-revert 
-work on different features simultaneously 

3 types

local version control system (Revision Control System)

centralized version control system (Subversion)

distributed version control system (Git, Mercurial)

why GitHub?

-Speed
-Distributed System
-Branching and Merging
-Strong Community Support

git config --global user.name "Your Name"
git config --global user.email "your.email@example.com"

git init : to initialize a new Git repo
git clone {url here} : clone or download a repository
git add {filename here} : add a file to staging
git commit -m "commit message" : commit your changes
git status : check the status of your repository
git pull : update your repository
git push : upload your changes to a remote repo


Steps: 

1. Clone or Initialize Repository

2. Make changes

3. Stage changes
	-view changes(git status)
	-add changes(git add.) or (git add <file>)
4.Commit changes (git commit -m "commit message")

5.Push or Pull changes 

	To send your commited changes to a remote repo (push)

	Before pushing changes, its good to pull the latest changes from the remote repo to 		ensure that everything is up to date and to resolve any potential merge conflicts		(pull)

	-push (git push origin <branchName>)
	-pull (git pull origin <branchName>)

Branching and Merging
- diverging from the main line of dev to continue work without affecting the main line

git branch ( list all branches)
git branch <branchName> create a new branch
git checkout <branchName> switch to a branch 
git merge <branchName> merge a branch into a active branch


-Forking is often used in open-source projects. It allows you to create a personal copy of another user's repository where you can make changes without affecting the original project

-Cloning is used to clone the repo after forking a project to download its content into your local machine.

Remotes are simply URLs that point to a repository which you can pull from and push to


Best Practices: 

Commit Often, Push Less
Write Descriptive Commit Messages
Use Branches
Always Pull before Pushing


















